import { GitDSL } from "../../../dsl/GitDSL";
import { GitHubAPI } from "../GitHubAPI";
import { Comment } from "../../platform";
/**
 * Finds a position in given diff. This is needed for GitHub API, more on the position finder
 * can be found here: https://developer.github.com/v3/pulls/comments/#create-a-comment
 *
 * @returns {Promise<number>} A number with given position
 */
export declare const findPositionForInlineComment: (git: GitDSL, line: number, path: string) => Promise<number>;
/**
 * An object whose responsibility is to handle commenting on an issue
 * @param api
 */
export declare const GitHubIssueCommenter: (api: GitHubAPI) => {
    supportsCommenting: () => boolean;
    supportsInlineComments: () => boolean;
    supportsHandlingResultsManually: () => boolean;
    updateStatus: (passed: boolean | "pending", message: string, url?: string | undefined) => Promise<boolean>;
    getInlineComments: (dangerID: string) => Promise<Comment[]>;
    createComment: (comment: string) => Promise<any>;
    createInlineComment: (git: GitDSL, comment: string, path: string, line: number) => Promise<any>;
    updateInlineComment: (comment: string, commentId: string) => Promise<any>;
    deleteMainComment: (dangerID: string) => Promise<boolean>;
    deleteInlineComment: (id: string) => Promise<boolean>;
    updateOrCreateComment: (dangerID: string, newComment: string) => Promise<string | undefined>;
};
